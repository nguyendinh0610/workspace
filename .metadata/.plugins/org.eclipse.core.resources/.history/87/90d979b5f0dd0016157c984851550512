package LinkedList;

import java.lang.reflect.Method;
import java.util.*;

public class DuplicationElimination {
	public static void main(String[] args){

	}
	
	public class Node{
		int data;
		Node next = null;
		
		public Node(int d){
			data = d;
		}
		
		void appendToTail(int d){
			Node end = new Node(d);
			Node n = this;
			while (n.next!= null){
				n = n.next;
			}
			n.next = end;
		}
		
		Node deleteNote(Node head, int d){
			Node n = head;
			
			if (n.data == d){
				return head.next;
			}
			
			while (n.next != null) {
				if (n.next.data == d){
					n.next = n.next.next;
					return head;
				}
				n = n.next;
			}
			
			return head;
		}
		
		Node removeDuplicate(Node head){
			
			if (head.next == null){
				return head;
			}
			
			Node first = head;
			Node second = head.next;
			
			while (first.next != null){
				while (second.next != null){
					if (first.data == second.data){
						this.deleteNote(second, second.data);
					}
					second = second.next;
				}
				first = first.next;
			}
			return head;
		}
	}
}
